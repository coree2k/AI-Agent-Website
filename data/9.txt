### n8n을 활용하여 여러 RSS 피드에서 AI 뉴스를 자동으로 수집하고, AI Agent가 국내 기업 관점에서 분석·요약한 후 Gmail과 카카오톡으로 전송하는 시스템 구축 가이드입니다.

## 목차

- [시스템 개요](#시스템-개요)
- [사전 준비사항](#사전-준비사항)
- [n8n 워크플로우 구축](#n8n-워크플로우-구축)
- [고급 활용 팁](#고급-활용-팁)
- [문제 해결](#문제-해결)
- [결론](#결론)

## 시스템 개요

이 가이드에서는 Webhook을 통해 트리거되면 여러 RSS 피드에서 최신 AI 뉴스를 수집하고, AI Agent가 한국 AI 전문기업 관점에서 분석한 후 이메일과 카카오톡으로 자동 발송하는 시스템을 구축합니다.

### 워크플로우 구조

> &nbsp;&nbsp;&nbsp; 1. **Webhook 트리거** → 2. **5개 RSS 피드 수집** → 3. **데이터 병합** → 4. **날짜 필터링** → 5. **중복 제거** → 6. **AI Agent 분석** → 7. **데이터 정리** → 8. **Gmail/카카오톡 발송**

![워크플로우 구조](./n8n_Source/10/2.%20WF.png)

<br>

### 주요 기능

- Webhook 기반 온디맨드 실행
- 5개 RSS 피드 동시 수집 (TechCrunch, MIT Technology Review 등)
- 최근 24시간 이내 뉴스만 필터링
- Google Sheets 기반 중복 뉴스 제거
- GPT-4o-mini 기반 한국어 전략 분석
- Gmail과 카카오톡으로 동시 발송

## 사전 준비사항

- n8n 설치 및 실행
- OpenAI API 키 (GPT-4o-mini 사용)
- Google Sheets API 접근 권한
- Gmail API 접근 권한
- 카카오 개발자 계정 (카카오톡 메시지 API)

## n8n 워크플로우 구축

### 1. Webhook 트리거 설정

1. **Webhook 노드 추가**
2. **HTTP Method**: POST
3. **Path**: 고유 ID 자동 생성 (예: `fb90429d-9ea2-4ac2-8a69-28001913521c`)
4. **Raw Body**: False

#### Webhook Body 구조

Webhook 호출 시 다음과 같은 JSON 구조로 RSS URL을 전달합니다:

```json
{
  "sources": [
    {
      "name": "TechCrunch AI",
      "url": "https://techcrunch.com/category/artificial-intelligence/feed/"
    },
    {
      "name": "MIT Tech Review AI",
      "url": "https://www.technologyreview.com/topic/artificial-intelligence/feed"
    }
  ]
}
```

### 2. RSS 피드 수집

5개의 RSS Read 노드를 병렬로 구성하여 다양한 소스에서 뉴스를 수집합니다.

#### RSS Read 노드 설정 (1~5)

각 RSS Read 노드는 Webhook에서 전달받은 URL을 사용합니다:

1. **RSS Read 노드 추가** (5개)
2. **URL 설정**:
   - RSS Read: `={{ $json.body.sources[0].url }}`
   - RSS Read2: `={{ $json.body.sources[1].url }}`
   - RSS Read3: `={{ $json.body.sources[2].url }}`
   - RSS Read4: `={{ $json.body.sources[3].url }}`
   - RSS Read5: `={{ $json.body.sources[4].url }}`

### 3. 데이터 병합

5개의 RSS 피드 결과를 하나로 통합합니다.

1. **Merge 노드 추가**
2. **Number of Inputs**: 5로 설정
3. 모든 RSS Read 노드의 출력을 Merge 노드에 연결

### 4. 날짜 필터링

최근 24시간 이내에 발행된 뉴스만 필터링합니다.

1. **Filter 노드 추가**
2. **Conditions 설정**:
   - **Left Value**: `={{ $json.pubDate }}`
   - **Operation**: Before or Equals (DateTime)
   - **Right Value**: `={{ $now.minus(24, 'hour') }}`
   - **Combinator**: AND
   - **Case Sensitive**: True
   - **Type Validation**: Strict

### 5. 데이터 필드 정리

필요한 필드만 추출하여 정리합니다.

1. **Edit Fields 노드 추가**
2. **Assignments 설정**:

```
제목: {{ $json.title }}
링크: {{ $json.link }}
뉴스내용: {{ $json.content }}
뉴스요약: {{ $json.contentSnippet }}
발행일: {{ $json.pubDate }}
```

### 6. 중복 제거

Google Sheets를 활용하여 이미 처리된 뉴스를 제외합니다.

1. **Google Sheets 노드 추가** (Get row(s) in sheet)
2. **Document ID**: Google Sheets 문서 ID 입력
3. **Sheet Name**: 시트 이름 선택
4. **Data Location**: Detect Automatically

#### Merge1 노드로 중복 확인

1. **Merge 노드 추가** (Merge1)
2. **Mode**: Combine
3. **Merge By Fields**:
   - Field 1: `링크`
   - Field 2: `링크`
4. **Join Mode**: Keep Non-Matches
5. **Output Data From**: Input 2

이렇게 하면 Google Sheets에 없는 새로운 뉴스만 통과됩니다.

### 7. AI Agent 분석

AI Agent가 각 뉴스를 한국 AI 전문기업 관점에서 분석합니다.

#### AI Agent 노드 설정

1. **AI Agent 노드 추가**
2. **Prompt Type**: Define
3. **User Prompt**:

```
Title : {{ $json['제목'] }}
Summary : {{ $json['뉴스요약'] }}
Contents : {{ $json['뉴스내용'] }}
Link : {{ $json['링크'] }}
발행일 : {{ $json['발행일'] }}
```

#### System Message (AI 분석 지침)

```
당신은 **AI 뉴스 분석 전문가**이다.  
역할은 **주어진 뉴스 기사 내용을 신속하고 체계적으로 요약·분석하고,  
국내 AI 전문기업의 전략적 시사점을 도출**하는 것이다.

───────────────────────────────────────

### 📹분석 지침
1. **요약(Summary)**  
   - 기사의 핵심 내용, 배경, 주요 주체(기업·정부·인물)를 3줄 이내로 간결히 정리한다.

2. **분석(Analysis)**  
   - 뉴스가 기술, 산업, 시장, 정책 측면에서 의미하는 바를 구체적으로 설명한다.  
   - 해외 기업·정부 동향이 포함된 경우, 국내 산업과의 연관성 또는 차이점을 언급한다.

3. **시사점(Implications)**  
   - 대한민국 내 **AI 전문기업, 예: SK, LG, 네이버, 카카오, 삼성SDS 등**의 관점에서  
     어떤 **기회, 위협, 전략적 대응**이 필요한지 실무적으로 제시한다.  
   - 단순한 소감이 아니라 **비즈니스 의사결정 또는 기술 전략 관점의 인사이트**로 작성한다.

───────────────────────────────────────

### 📹출력 형식
다음의 구조로 한글로 작성한다.

**① 요약:**  
(뉴스의 주요 내용 요약)

**② 분석:**  
(산업·기술적 관점에서의 핵심 분석)

**③ 시사점:**  
(국내 AI 기업의 관점에서의 전략적 시사점)

───────────────────────────────────────

### 📹입력 데이터
기사 내용:  
***{{ $json['뉴스내용'] }}***

───────────────────────────────────────

### 📹작성 원칙
- 모든 결과는 반드시 **한글로 작성**한다.  
- 불필요한 영어 원문, URL, HTML 태그 등은 제거한다.  
- 지나치게 일반적인 코멘트("AI 시장은 중요하다")는 피하고,  
  **산업 동향·기술 혁신·경쟁 구도·시장 전략**에 초점을 맞춘다.
```

#### OpenAI Chat Model 설정

1. **OpenAI Chat Model 노드 추가**
2. **Model**: gpt-4o-mini 선택
3. AI Agent 노드의 Chat Model 입력에 연결

#### Structured Output Parser 설정

일관된 JSON 형식으로 출력을 받기 위해 Structured Output Parser를 사용합니다.

1. **Structured Output Parser 노드 추가**
2. **JSON Schema Example**:

```json
[
  {
    "title": "Apple might be building its own AI \"answer engine\"",
    "link": "https://techcrunch.com/2025/08/03/apple-might-be-buildig-its-own-ai-answer-engine",
    "summary": "애플은 자사 AI 엔진을 개발할지 모른다. 애플은 이를 계기로 AI시장에서의 새로운 도전을 시작했다",
    "implication": "대한민국 AI 전문업체인 SK AX 입장에서는 경쟁사인 애플 자사 AI 엔진을 개발함으로써 강력한 글로벌 경쟁자의 새로운 진출에 촉각을 내세우고 있다."
  }
]
```

3. AI Agent 노드의 Output Parser 입력에 연결

### 8. 뉴스 데이터 포맷팅

AI Agent의 출력을 이메일과 카카오톡에 적합한 형식으로 변환합니다.

#### Edit Fields1 노드 설정

1. **Edit Fields 노드 추가** (Edit Fields1)
2. **Assignments**:

```
news:
제목 : {{ $json.output[0].title }} 

본문요약 : {{ $json.output[0].summary }}
링크 : {{ $json.output[0].link }}
시사점 : {{ $json.output[0].implication }}
```

### 9. 뉴스 통합 정리

여러 뉴스 항목을 하나의 메시지로 통합합니다.

#### Aggregate 노드 설정

1. **Aggregate 노드 추가**
2. **Field to Aggregate**: `news`
3. **Aggregation**: 기본 설정 사용

#### Edit Fields2 노드 설정

1. **Edit Fields 노드 추가** (Edit Fields2)
2. **Assignments**:

```
news: {{ $json.news.join('\n\n') }}
```

이렇게 하면 모든 뉴스가 줄바꿈으로 구분되어 하나의 텍스트로 통합됩니다.

### 10. Gmail 발송

정리된 뉴스를 Gmail로 발송합니다.

1. **Gmail 노드 추가** (Send a message)
2. **Send To**: 수신자 이메일 주소
3. **Subject**: `뉴스기사`
4. **Email Type**: Text
5. **Message**: `={{ $json.news }}`

#### Gmail OAuth2 설정

1. [Google Cloud Console](https://console.cloud.google.com/)에서 프로젝트 생성
2. Gmail API 활성화
3. OAuth 2.0 클라이언트 ID 생성
4. Redirect URI 추가: `https://your-n8n-domain/rest/oauth2-credential/callback`
5. n8n에서 Gmail OAuth2 Credential 생성

### 11. 카카오톡 알림 발송

작업 완료 알림을 카카오톡으로 발송합니다.

1. **HTTP Request 노드 추가** (Kakao Talk)
2. **Method**: POST
3. **URL**: `https://kapi.kakao.com/v2/api/talk/memo/default/send`
4. **Authentication**: Generic Credential Type - OAuth2 API

#### Header 설정

- **Content-Type**: `application/x-www-form-urlencoded;charset=utf-8`

#### Body Parameters 설정

```json
{
  "object_type": "text",
  "text": "{{ '뉴스 발송 완료 ' + $now.toFormat('yyyy-MM-dd,HH:mm:ss') }}",
  "link": {
    "web_url": "https://developers.kakao.com",
    "mobile_web_url": "https://developers.kakao.com"
  },
  "button_title": "바로 확인"
}
```

#### 카카오 OAuth2 설정

1. [카카오 디벨로퍼스](https://developers.kakao.com/)에서 앱 생성
2. 플랫폼 등록 (웹 도메인)
3. 카카오 로그인 활성화
4. Redirect URI 등록
5. Client Secret 발급
6. 동의 항목에서 '카카오톡 메시지 전송' 권한 설정
7. n8n에서 OAuth2 Credential 생성

## 고급 활용 팁

### RSS 피드 소스 추가

Webhook Body에 더 많은 RSS 피드를 추가할 수 있습니다:

```json
{
  "sources": [
    {
      "name": "TechCrunch AI",
      "url": "https://techcrunch.com/category/artificial-intelligence/feed/"
    },
    {
      "name": "MIT Tech Review",
      "url": "https://www.technologyreview.com/topic/artificial-intelligence/feed"
    },
    {
      "name": "VentureBeat AI",
      "url": "https://venturebeat.com/category/ai/feed/"
    },
    {
      "name": "Wired AI",
      "url": "https://www.wired.com/tag/artificial-intelligence/feed/"
    },
    {
      "name": "The Verge AI",
      "url": "https://www.theverge.com/ai-artificial-intelligence/rss/index.xml"
    }
  ]
}
```

### 스케줄 자동화

Webhook 대신 Schedule Trigger를 사용하여 정기적으로 실행할 수 있습니다:

1. Webhook 노드를 Schedule Trigger로 교체
2. Trigger Interval 설정 (예: Every Day, 오전 9시)
3. RSS URL을 하드코딩 또는 환경 변수로 설정

### 중복 제거 개선

Google Sheets에 처리된 뉴스를 자동으로 추가하여 중복을 방지할 수 있습니다:

1. **Google Sheets 노드 추가** (Append data to sheet)
2. AI Agent 이후에 연결
3. 처리된 뉴스의 링크와 날짜를 시트에 추가

### AI 분석 커스터마이징

System Message를 수정하여 다른 관점으로 분석할 수 있습니다:

- **스타트업 관점**: 투자 기회, 시장 진입 전략 중심
- **개발자 관점**: 기술 스택, 구현 방법 중심
- **경영진 관점**: ROI, 비즈니스 임팩트 중심

### Slack 연동

Gmail 대신 Slack으로 발송하려면:

1. Gmail 노드를 Slack 노드로 교체
2. Slack OAuth2 설정
3. 채널 선택
4. Message Type을 Text로 설정

## 문제 해결

### 자주 발생하는 문제들

1. **RSS 피드 읽기 실패**:
   - RSS URL이 유효한지 확인
   - 일부 사이트는 User-Agent 헤더 필요
   - Rate Limiting 확인

2. **날짜 필터가 작동하지 않음**:
   - RSS 피드의 날짜 형식 확인
   - 타임존 설정 확인 (Asia/Seoul)
   - pubDate 필드 존재 여부 확인

3. **중복 제거가 안 됨**:
   - Google Sheets 권한 확인
   - 필드 이름 정확히 일치하는지 확인 (한글 포함)
   - Merge1 노드의 설정 재확인

4. **AI Agent 출력 형식 오류**:
   - Structured Output Parser 스키마 확인
   - System Message의 출력 형식 지침 강화
   - Temperature를 낮춰 일관성 향상

5. **Gmail 발송 실패**:
   - OAuth2 인증 상태 확인
   - Gmail API 할당량 확인
   - 수신자 이메일 주소 유효성 확인

6. **카카오톡 메시지 실패**:
   - OAuth2 토큰 만료 여부 확인
   - 카카오톡 메시지 권한 설정 확인
   - 메시지 형식 (JSON) 유효성 검증

### 디버깅 팁

1. **단계별 테스트**: 각 노드의 출력을 확인하며 순차적으로 테스트
2. **Pinned Data 활용**: 특정 노드의 출력을 고정하여 반복 테스트
3. **로그 확인**: n8n 실행 로그에서 상세한 오류 메시지 확인
4. **Webhook 테스트**: Postman이나 curl로 Webhook 직접 호출 테스트

## 결론

> n8n과 RSS 피드, AI Agent를 결합하면 여러 소스에서 AI 뉴스를 자동으로 수집하고, 국내 기업 관점에서 전략적으로 분석한 후 이메일과 카카오톡으로 전달하는 완전 자동화 시스템을 구축할 수 있습니다.
> 
> 이 워크플로우의 핵심 장점:
> 
> - **다중 소스 통합**: 5개 이상의 RSS 피드 동시 수집
> - **스마트 필터링**: 최신 뉴스만 선별하고 중복 자동 제거
> - **전략적 분석**: 한국 AI 기업 관점의 실무적 인사이트 제공
> - **멀티 채널 발송**: Gmail과 카카오톡 동시 전송
> - **확장 가능**: 새로운 RSS 피드나 발송 채널 쉽게 추가
> 
> 오늘 소개한 AI 뉴스 분석뿐만 아니라, 경쟁사 모니터링, 특허 동향 추적, 학술 논문 요약 등 다양한 정보 수집 및 분석 업무에 응용할 수 있습니다.

## 참고 자료

- [n8n 공식 문서](https://docs.n8n.io/)
- [OpenAI API 문서](https://platform.openai.com/docs)
- [Google Sheets API](https://developers.google.com/sheets/api)
- [Gmail API 문서](https://developers.google.com/gmail/api)
- [카카오 디벨로퍼스](https://developers.kakao.com/)
- [RSS 2.0 Specification](https://www.rssboard.org/rss-specification)