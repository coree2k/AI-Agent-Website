### n8n을 활용하여 RSS 피드에서 뉴스를 수집하고, AI로 요약한 후 다양한 채널로 자동 발송하는 시스템 구축 가이드입니다. <br> 이 워크플로우는 정기적으로 뉴스레터를 생성하고 이메일, 데이터베이스 저장, 메시징 플랫폼 발송까지 자동화합니다.

## 목차

- [시스템 개요](#시스템-개요)
- [사전 준비사항](#사전-준비사항)
- [워크플로우 구축](#워크플로우-구축)
- [고급 활용 팁](#고급-활용-팁)
- [문제 해결](#문제-해결)
- [확장 가능성](#확장-가능성)

## 시스템 개요

이 가이드에서는 RSS 피드에서 뉴스를 수집하고, AI로 요약한 후 여러 채널로 자동 배포하는 종합 뉴스레터 시스템을 구축합니다.

### 워크플로우 구조

> **메인 플로우**: 스케줄 트리거 → RSS 수집 → 병합 → 필터링 → AI 요약 → 멀티 채널 발송

![워크플로우 구조](./n8n_Source/07/2.%20WF.png)

**지원 채널**:
- 이메일 (Gmail)
- 데이터베이스 저장 (Airtable)
- 메시징 플랫폼 (카카오톡 등)

### 주요 기능

- 복수의 RSS 피드 동시 수집
- 중복 제거 및 최신 뉴스 필터링
- OpenAI GPT를 활용한 한국어 요약
- 구글 시트로 뉴스 데이터 관리
- 이메일, 메신저 등 멀티 채널 자동 발송
- 발송 내역 데이터베이스 저장

## 사전 준비사항

- n8n 설치 및 실행 환경
- OpenAI API 키 (GPT-4 또는 GPT-3.5)
- Google 계정 (Gmail, Google Sheets 연동용)
- Airtable 계정 (선택사항)
- 카카오 개발자 계정 (카카오톡 발송시)

## 워크플로우 구축

### 1. 스케줄 트리거 설정

워크플로우를 자동으로 실행하기 위한 스케줄을 설정합니다.

**Schedule Trigger 노드 추가**:
- Mode: `Every Day` 또는 `Custom`
- Hour: 원하는 시간 설정 (예: 오전 9시)
- Minute: 0
- Timezone: Asia/Seoul

### 2. RSS 피드 수집 (다중 소스)

여러 RSS 피드에서 뉴스를 동시에 수집합니다.

**RSS Read 노드 1 (RSS Read1)**:
```
Feed URL: https://example-tech-news.com/rss
```

**RSS Read 노드 2 (RSS Read2)**:
```
Feed URL: https://another-news-source.com/feed
```

**팁**: 필요한 만큼 RSS Read 노드를 추가하여 여러 소스에서 뉴스를 수집할 수 있습니다.

### 3. 피드 병합 및 정렬

수집한 여러 RSS 피드를 하나로 병합하고 최신순으로 정렬합니다.

**Merge Node 추가**:
- Mode: `Combine`
- Combine By: `Multiplex`
- 모든 RSS Read 노드를 Merge 노드로 연결

**정렬 설정**:
- Sort By: `pubDate`
- Order: `Descending` (최신순)

### 4. Newsletter 필터링 및 제한

발송할 뉴스 개수를 제한하고 중복을 제거합니다.

**Filter Node 추가**:
- Condition: pubDate가 24시간 이내인 항목만 선택
- Expression: `{{DateTime.now().minus({hours: 24}) < new Date($json.pubDate)}}`

**Limit Node 추가**:
- Max Items: `5` (발송할 최대 뉴스 개수)

### 5. 구글 시트 데이터 조회 및 중복 체크

이미 발송한 뉴스인지 확인하기 위해 구글 시트를 조회합니다.

**Google Sheets 노드 추가 (조회용)**:
- Operation: `Read`
- Document: 뉴스 관리 스프레드시트 선택
- Sheet: 시트 이름 입력
- Range: `A:Z` (전체 데이터 조회)

**중복 체크 로직**:
- Code 노드 또는 Filter 노드를 사용하여 이미 발송된 URL과 비교

### 6. OpenAI로 뉴스 요약

각 뉴스 항목을 AI로 요약합니다.

**OpenAI Chat Model 노드 추가**:
- Model: `gpt-4` 또는 `gpt-3.5-turbo`
- Operation: `Message a Model`

**System Prompt**:
```
당신은 전문 뉴스 편집자입니다. 제공된 뉴스 기사를 한국어로 간결하게 요약해주세요.

### 요약 규칙
1. 200-300자 이내로 작성
2. 핵심 내용만 포함
3. 읽기 쉬운 문장으로 작성
4. 객관적 사실만 전달

### 출력 형식
**제목**: [기사 제목]
**요약**: [핵심 내용 2-3문장]
**출처**: [출처명]
**날짜**: [발행일]
```

**User Prompt**:
```
다음 뉴스를 요약해주세요:

제목: {{ $json.title }}
내용: {{ $json.description }}
링크: {{ $json.link }}
날짜: {{ $json.pubDate }}
```

### 7. 요약 내용 병합 및 포맷팅

여러 뉴스 요약을 하나의 뉴스레터로 병합합니다.

**Aggregate 노드 또는 Code 노드 사용**:
```javascript
const summaries = items.map((item, index) => {
  return `
## ${index + 1}. ${item.json.title}

${item.json.summary}

📌 원문 보기: ${item.json.link}
---
`;
}).join('\n\n');

return [{
  json: {
    newsletter_content: `
# 오늘의 뉴스레터 📰

${summaries}

---
발송일시: ${new Date().toLocaleString('ko-KR')}
    `,
    items_count: items.length,
    date: new Date().toISOString()
  }
}];
```

### 8. Gmail로 뉴스레터 발송

**Gmail 노드 추가**:
- Operation: `Send Email`
- To: 수신자 이메일 주소
- Subject: `[Daily Newsletter] {{DateTime.now().toFormat('yyyy-MM-dd')}} 뉴스 요약`
- Email Type: `HTML`
- Message: `{{ $json.newsletter_content }}`

**HTML 포맷팅**:
```html
<!DOCTYPE html>
<html>
<head>
  <style>
    body { font-family: Arial, sans-serif; line-height: 1.6; }
    .article { margin-bottom: 30px; padding: 15px; border-left: 4px solid #007bff; }
    .title { font-size: 18px; font-weight: bold; color: #333; }
    .summary { color: #666; margin: 10px 0; }
    .link { color: #007bff; text-decoration: none; }
  </style>
</head>
<body>
  <h1>오늘의 뉴스레터 📰</h1>
  {{ $json.newsletter_content }}
</body>
</html>
```

### 9. Airtable에 발송 내역 저장

발송한 뉴스레터 내역을 데이터베이스에 저장합니다.

**Airtable 노드 추가**:
- Operation: `Append`
- Base: Airtable 베이스 선택
- Table: 테이블 이름
- Fields:
  - `Newsletter Date`: `{{ DateTime.now().toISODate() }}`
  - `Content`: `{{ $json.newsletter_content }}`
  - `Items Count`: `{{ $json.items_count }}`
  - `Status`: `Sent`
  - `Sent At`: `{{ DateTime.now().toISO() }}`

### 10. 구글 시트에 발송 기록 업데이트

**Google Sheets 노드 추가 (기록용)**:
- Operation: `Append`
- Document: 뉴스 관리 스프레드시트
- Sheet: 시트 이름
- Data Mode: `Auto-Map Input Data to Columns`

**기록할 데이터**:
- 뉴스 URL
- 제목
- 발송 날짜
- 상태 (Sent)

### 11. 메시징 플랫폼 발송 (선택사항)

카카오톡이나 다른 메시징 플랫폼으로도 발송할 수 있습니다.

**HTTP Request 노드 (카카오톡)**:
- Method: `POST`
- URL: `https://kapi.kakao.com/v2/api/talk/memo/default/send`
- Authentication: OAuth2
- Body:
```json
{
  "object_type": "text",
  "text": "{{ $json.newsletter_content }}",
  "link": {
    "web_url": "https://your-domain.com",
    "mobile_web_url": "https://your-domain.com"
  },
  "button_title": "자세히 보기"
}
```

## 고급 활용 팁

### 조건부 발송

뉴스가 일정 개수 이상일 때만 발송하도록 설정:

**IF 노드 추가**:
- Condition: `{{ $json.items_count >= 3 }}`
- True: 발송 진행
- False: 발송 중단

### 개인화된 뉴스레터

수신자별로 관심 키워드에 맞춘 뉴스만 발송:

**Filter 노드에 조건 추가**:
```javascript
// 수신자의 관심 키워드
const keywords = ['AI', '머신러닝', '딥러닝'];

// 제목이나 내용에 키워드가 포함된 항목만 필터링
return keywords.some(keyword => 
  $json.title.includes(keyword) || 
  $json.description.includes(keyword)
);
```

### A/B 테스팅

다른 요약 스타일로 두 그룹에 발송:

**Switch 노드 사용**:
- 수신자를 두 그룹으로 나누어 다른 프롬프트로 요약

### RSS 피드 동적 관리

구글 시트에서 RSS 피드 URL 목록을 관리:

**Google Sheets에서 피드 목록 읽기**:
- Sheet에 피드 URL 목록 저장
- Loop 노드로 각 URL에 대해 RSS Read 실행

### 이미지 포함 뉴스레터

뉴스에 포함된 이미지를 추출하여 뉴스레터에 포함:

**HTML Email에 이미지 추가**:
```html
<img src="{{ $json.image_url }}" alt="{{ $json.title }}" style="max-width: 100%; height: auto;">
```

## 문제 해결

### 자주 발생하는 문제들

1. **RSS 피드 읽기 실패**:
   - Feed URL이 유효한지 확인
   - RSS 형식이 표준을 따르는지 확인
   - Timeout 설정 조정

2. **OpenAI API 오류**:
   - API 키가 유효한지 확인
   - 요청 한도를 초과하지 않았는지 확인
   - 프롬프트 길이가 토큰 제한을 초과하지 않는지 확인

3. **Gmail 발송 실패**:
   - Gmail 인증이 올바른지 확인
   - 수신자 이메일 주소 형식 확인
   - Gmail 일일 발송 제한 확인 (개인 계정: 500통/일)

4. **중복 뉴스 발송**:
   - 구글 시트 조회 로직 확인
   - URL 비교 로직의 정확성 확인
   - 시트 업데이트가 제대로 되는지 확인

5. **워크플로우 실행 시간 초과**:
   - RSS 피드 개수 줄이기
   - 병렬 처리 대신 순차 처리 고려
   - Timeout 설정 증가

## 확장 가능성

### 다중 언어 지원

여러 언어로 뉴스레터 발송:

- Language Detection 노드로 원문 언어 감지
- OpenAI에 번역 요청 추가
- 언어별로 다른 수신자 그룹 설정

### 감성 분석

뉴스의 감성을 분석하여 긍정/부정/중립 표시:

```
OpenAI 프롬프트에 추가:
"이 뉴스의 감성을 분석하여 긍정/부정/중립 중 하나로 분류해주세요."
```

### 트렌드 분석

일정 기간의 뉴스를 분석하여 주간/월간 트렌드 리포트 생성:

- 구글 시트에 누적된 데이터 분석
- 키워드 빈도 분석
- 주요 트렌드 시각화

### Webhook 연동

외부 시스템에서 실시간으로 뉴스레터 발송 요청:

**Webhook Trigger 노드 추가**:
- Production URL 생성
- 외부 시스템에서 POST 요청으로 뉴스레터 발송 트리거

### 모바일 앱 푸시 알림

Firebase Cloud Messaging 연동:

**HTTP Request 노드로 FCM 호출**:
```json
{
  "to": "/topics/newsletter",
  "notification": {
    "title": "새로운 뉴스레터가 도착했습니다",
    "body": "{{ $json.summary }}"
  }
}
```

## 성능 최적화

### 캐싱 전략

- 이미 처리한 뉴스는 재처리하지 않도록 캐시
- Redis 또는 구글 시트 활용

### 배치 처리

- 여러 뉴스를 한 번에 OpenAI에 요청
- API 호출 횟수 최소화

### 에러 핸들링

- Try-Catch 노드로 에러 처리
- 실패한 항목 로그 저장
- 재시도 로직 구현

## 모니터링 및 로깅

### 실행 내역 추적

**Google Sheets에 실행 로그 저장**:
- 실행 시각
- 수집된 뉴스 개수
- 발송 성공/실패 여부
- 에러 메시지

### 알림 설정

실행 실패시 관리자에게 알림:

**Gmail 노드 추가 (에러 알림용)**:
```
To: admin@example.com
Subject: [Alert] Newsletter 워크플로우 실행 실패
Message: {{ $json.error_message }}
```

## 보안 고려사항

1. **API 키 관리**:
   - n8n Credentials에 안전하게 저장
   - 환경 변수 사용 권장
   - 정기적으로 키 갱신

2. **데이터 암호화**:
   - 민감한 정보는 암호화하여 저장
   - HTTPS 통신 사용

3. **접근 권한 관리**:
   - n8n 워크플로우 접근 권한 제한
   - 구글 시트 공유 권한 최소화

## 비용 최적화

### OpenAI API 사용 최적화

- 짧은 프롬프트 사용
- 필요한 경우에만 요약 생성
- 캐싱으로 중복 요청 방지

### Gmail 발송 제한 관리

- 필요한 사람에게만 발송
- 구독 취소 기능 구현
- 일일 발송량 모니터링

## 결론

> 이 n8n 워크플로우를 통해 RSS 피드 수집부터 AI 요약, 멀티 채널 배포까지 완전히 자동화된 뉴스레터 시스템을 구축할 수 있습니다. 스케줄에 따라 자동으로 실행되며, 구글 시트로 데이터를 관리하고, 여러 채널로 동시 발송이 가능합니다.
> 
> 초기 설정은 다소 복잡할 수 있지만, 한 번 구축하면 매일 자동으로 최신 뉴스를 요약하여 받아볼 수 있습니다. 이 가이드를 기반으로 자신만의 뉴스레터 자동화 시스템을 만들 수 있습니다.

## 참고 자료

- [n8n 공식 문서](https://docs.n8n.io/)
- [OpenAI API 문서](https://platform.openai.com/docs)
- [Google Workspace API](https://developers.google.com/workspace)
- [Airtable API](https://airtable.com/developers)
- [카카오 디벨로퍼스](https://developers.kakao.com/)
- [RSS 2.0 Specification](https://www.rssboard.org/rss-specification)